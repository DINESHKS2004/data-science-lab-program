import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score

# Load dataset
try:
    df = pd.read_csv("car_data.csv")  # Replace with your actual CSV
except FileNotFoundError:
    print("Error: 'car_data.csv' not found.")
    exit()

# Preview columns
print("\n📊 Available columns in dataset:")
print(df.columns.tolist())

# Ask user to input selected features
target = 'price'
features_input = input("\nEnter feature column names separated by commas (e.g., engine_size,horsepower,mpg): ")
features = [f.strip() for f in features_input.split(',')]

# Check if selected features and target exist
missing = [f for f in features + [target] if f not in df.columns]
if missing:
    print(f"Error: Missing columns in dataset: {missing}")
    exit()

# Drop missing values
df = df[features + [target]].dropna()

# Define X and y
X = df[features]
y = df[target]

# Train/test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Predict
y_pred = model.predict(X_test)

# Evaluate
r2 = r2_score(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)

print("\n📈 Model Evaluation:")
print(f"R² Score: {r2:.4f}")
print(f"Mean Squared Error: {mse:.2f}")

# Feature importance (coefficients)
coef_df = pd.DataFrame({
    'Feature': features,
    'Coefficient': model.coef_
}).sort_values(by='Coefficient', key=abs, ascending=False)

print("\n🔍 Feature Influence on Car Price:")
print(coef_df)

# Optional: Visualize predictions vs actual
plt.figure(figsize=(8, 6))
plt.scatter(y_test, y_pred, color='blue', edgecolor='k', alpha=0.7)
plt.plot([y.min(), y.max()], [y.min(), y.max()], 'r--')
plt.xlabel("Actual Price")
plt.ylabel("Predicted Price")
plt.title("Actual vs. Predicted Car Prices")
plt.grid(True)
plt.tight_layout()
plt.show()
