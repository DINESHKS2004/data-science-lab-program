import pandas as pd
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
import matplotlib.pyplot as plt
import seaborn as sns

# Load the dataset
try:
    df = pd.read_csv("customer_data.csv")  # Should contain only numeric shopping-related features
except FileNotFoundError:
    print("Error: 'customer_data.csv' not found.")
    exit()

# Scaling the data
scaler = StandardScaler()
X_scaled = scaler.fit_transform(df)

# Choose number of clusters (elbow method could be used)
k = int(input("Enter the number of clusters (e.g., 3, 4, 5): "))
kmeans = KMeans(n_clusters=k, random_state=42)
kmeans.fit(X_scaled)

# Display cluster centers and labels (optional)
df['cluster'] = kmeans.labels_

# Prompt user for new customer input
print("\nEnter the following features for the new customer:")
new_customer = []
for col in df.columns[:-1]:  # Skip 'cluster' column
    val = float(input(f"{col}: "))
    new_customer.append(val)

# Scale and predict cluster
new_customer_scaled = scaler.transform([new_customer])
cluster_label = kmeans.predict(new_customer_scaled)[0]

print(f"\nðŸ§© The new customer belongs to Cluster/Segment: {cluster_label}")
