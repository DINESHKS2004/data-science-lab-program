from sklearn.datasets import load_iris
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

# Load the Iris dataset
iris = load_iris()
X = iris.data  # Features: sepal length, sepal width, petal length, petal width
y = iris.target  # Target: 0=setosa, 1=versicolor, 2=virginica
species_names = iris.target_names

# Split dataset (for accuracy checking, optional)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train Decision Tree model
clf = DecisionTreeClassifier(random_state=42)
clf.fit(X_train, y_train)

# Evaluate accuracy (optional)
y_pred = clf.predict(X_test)
print(f"Model Accuracy: {accuracy_score(y_test, y_pred) * 100:.2f}%\n")

# User input
print("Enter flower measurements:")

sepal_length = float(input("Sepal length (cm): "))
sepal_width = float(input("Sepal width (cm): "))
petal_length = float(input("Petal length (cm): "))
petal_width = float(input("Petal width (cm): "))

# Create input sample
new_sample = [[sepal_length, sepal_width, petal_length, petal_width]]

# Predict species
predicted_class = clf.predict(new_sample)[0]
predicted_species = species_names[predicted_class]

# Output
print(f"\nðŸŒ¸ The predicted Iris species is: {predicted_species.capitalize()}")
